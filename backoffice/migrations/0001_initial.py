# Generated by Django 3.1.1 on 2021-03-11 10:50

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('photouser', models.ImageField(blank=True, default='backoffice/static/avatars/avatar.jpg', null=True, upload_to='backoffice/static/avatars')),
                ('position', models.CharField(max_length=100)),
                ('notices', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('brand_name', models.CharField(max_length=100, unique=True)),
                ('brand_logo', models.ImageField(blank=True, null=True, upload_to='backoffice/static/logos')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('brand_name',),
            },
        ),
        migrations.CreateModel(
            name='CategDoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categdoc', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CategItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categprod_name', models.CharField(max_length=100, unique=True)),
                ('categprod_description', models.CharField(blank=True, max_length=3000)),
            ],
            options={
                'ordering': ('categprod_name',),
            },
        ),
        migrations.CreateModel(
            name='CategPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categpost_name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ('categpost_name',),
            },
        ),
        migrations.CreateModel(
            name='CategTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_task', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=64)),
                ('phone', models.CharField(blank=True, max_length=12, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('web', models.URLField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('lema', models.CharField(blank=True, max_length=200, null=True)),
                ('about', models.CharField(blank=True, max_length=600, null=True)),
                ('sales_conditions', models.TextField(blank=True, null=True)),
                ('customer_notice', models.TextField(blank=True, null=True)),
                ('protection_policies', models.TextField(blank=True, null=True)),
                ('text_1', models.TextField(blank=True, null=True)),
                ('text_2', models.TextField(blank=True, null=True)),
                ('text_3', models.TextField(blank=True, null=True)),
                ('text_4', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='backoffice/static/logos')),
            ],
            options={
                'ordering': ('company_name',),
            },
        ),
        migrations.CreateModel(
            name='Courier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courier_name', models.CharField(blank=True, max_length=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='backoffice/static/logos')),
                ('description', models.TextField(blank=True, null=True)),
                ('delivery_terms', models.TextField(blank=True)),
            ],
            options={
                'ordering': ('courier_name',),
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_name', models.CharField(blank=True, max_length=100)),
                ('symbol', models.CharField(blank=True, max_length=1, null=True)),
                ('current_value', models.DecimalField(blank=True, decimal_places=5, max_digits=7)),
            ],
            options={
                'ordering': ('currency_name',),
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_name', models.CharField(blank=True, max_length=100)),
                ('customer_lastname', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, unique=True)),
                ('identification_number', models.CharField(blank=True, max_length=100, null=True)),
                ('accept_promo', models.BooleanField()),
                ('accept_survey', models.BooleanField()),
                ('accept_notifications', models.BooleanField()),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('customer_name',),
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_item_sold', models.PositiveIntegerField()),
                ('total_item_stored', models.PositiveIntegerField()),
                ('value_item_sold', models.PositiveIntegerField()),
                ('value_item_stored', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=255, verbose_name='item')),
                ('item_description', models.TextField(null=True)),
                ('item_SKU', models.CharField(max_length=100)),
                ('ean', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(max_length=100, null=True)),
                ('is_sold', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('price', models.PositiveIntegerField(null=True)),
                ('purchase_price', models.PositiveIntegerField(null=True)),
                ('tax', models.PositiveIntegerField(null=True)),
                ('color', models.CharField(max_length=30, null=True)),
                ('size', models.CharField(max_length=3, null=True)),
                ('weight', models.CharField(max_length=5, null=True)),
                ('height', models.CharField(max_length=5, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='backoffice/static/images')),
                ('image_1', models.ImageField(blank=True, null=True, upload_to='backoffice/static/images')),
                ('image_2', models.ImageField(blank=True, null=True, upload_to='backoffice/static/images')),
                ('image_3', models.ImageField(blank=True, null=True, upload_to='backoffice/static/images')),
                ('image_4', models.ImageField(blank=True, null=True, upload_to='backoffice/static/images')),
                ('image_5', models.ImageField(blank=True, null=True, upload_to='backoffice/static/images')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.brand')),
                ('categ', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.categitem')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.currency')),
            ],
            options={
                'ordering': ('item_name',),
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_name', models.CharField(blank=True, max_length=255)),
                ('level_description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform_name', models.CharField(max_length=100, verbose_name='plataform')),
                ('user_platf', models.CharField(max_length=100, verbose_name='nick_access')),
                ('access_key', models.CharField(max_length=255, verbose_name='access_password')),
                ('api_details', models.TextField(blank=True)),
                ('api_description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_name', models.CharField(max_length=64)),
                ('phone', models.CharField(blank=True, max_length=12, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('web', models.URLField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('section_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ('section_name',),
            },
        ),
        migrations.CreateModel(
            name='UserClas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clas_name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=3000)),
            ],
            options={
                'ordering': ('clas_name',),
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=255)),
                ('task_description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField()),
                ('is_done', models.BooleanField()),
                ('executer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='executer', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='owner', to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.section')),
                ('task_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.categtask')),
            ],
            options={
                'ordering': ('updated_at',),
            },
        ),
        migrations.CreateModel(
            name='SubcategoryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subcategoryitem_name', models.CharField(max_length=255)),
                ('categ', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.categitem')),
            ],
        ),
        migrations.CreateModel(
            name='Sold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('courier_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.courier')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.customer')),
                ('sold_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.item')),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Returned',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rma_code', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.customer')),
                ('returned_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.item')),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('image_header', models.ImageField(blank=True, null=True, upload_to='backoffice/static/images')),
                ('posttext', models.TextField(verbose_name='post_text')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_draft', models.BooleanField(default=True)),
                ('url', models.SlugField(max_length=255, unique=True)),
                ('views', models.PositiveIntegerField(default=0)),
                ('categpost', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backoffice.categpost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.AddField(
            model_name='item',
            name='operation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.operation'),
        ),
        migrations.AddField(
            model_name='item',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.section'),
        ),
        migrations.AddField(
            model_name='item',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.subcategoryitem'),
        ),
        migrations.CreateModel(
            name='Documt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=255, verbose_name='document')),
                ('document_description', models.TextField(blank=True)),
                ('document_code', models.CharField(max_length=1000, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='backoffice/static/documents')),
                ('categ_doc', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backoffice.categdoc')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backoffice.level'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(blank=True, max_length=100, verbose_name='topic')),
                ('commentext', models.TextField(verbose_name='comment')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='backoffice.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='clas_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backoffice.userclas'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backoffice.section'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
